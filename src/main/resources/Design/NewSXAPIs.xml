<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>Design</web>
  <name>NewSXAPIs</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Design.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1323527434000</creationDate>
  <date>1360950317000</date>
  <contentUpdateDate>1360950317000</contentUpdateDate>
  <version>1.1</version>
  <title>New SX APIs</title>
  <template/>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>false</hidden>
  <object>
    <name>Design.NewSXAPIs</name>
    <number>0</number>
    <className>XWiki.DesignClass</className>
    <guid>34ce2c55-41f5-4391-bbe0-547314415f42</guid>
  </object>
  <object>
    <class>
      <name>XWiki.TagClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <tags>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>tags</name>
        <number>1</number>
        <prettyName>Tags</prettyName>
        <relationalStorage>1</relationalStorage>
        <separator>|</separator>
        <separators>|,</separators>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <values/>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </tags>
    </class>
    <name>Design.NewSXAPIs</name>
    <number>0</number>
    <className>XWiki.TagClass</className>
    <guid>5cada5a5-60e1-4b8b-9061-f2cc4ce6a4dc</guid>
  </object>
  <content>{{include document="XWiki.DesignClassSheet"/}}

This proposal aims to propose replacement for SX scripting APIs, currently exposed by the plugin technology via ##$xwiki.ssx##, ##$xwiki.jsx##, ##$xwiki.jfsx## etc. entry points.

== Proposal ==

=== Entry point ===

##$services.skin##

=== APIs ===

==== ##$services.skin.require(Map&lt;String,Object&gt;)## ====

Full example

{{code}}
$services.skin.require({
  'My.Extension' : { 'type': 'js', 'forceSkinAction' : 'true' },
  'My.OtherExtension' : {'type' ['css', 'js', 'link'] },
  'uicomponents/widgers/some/widget.js' : { 'medium' : 'file' },
  'some/resource/style.css' : { 'medium':'resource' }
})
{{/code}}

==== ##$services.skin.require(String)## ====

Example : 

{{code}}
$services.skin.require("My.Extension")

-&gt; Requires all extensions in document My.Extension
{{/code}}

==== ##$services.skin.require(String, Map&lt;String,Object&gt;)## ====

Example : 

{{code}}
$services.skin.require("My.Extension", {'forceSkinAction' : true})

-&gt; Requires all extensions in document My.Extension with param forceSkinAction to true
{{/code}}

==== ##$services.skin.requireFile(String)## ====

Example : 
{{code}}
$services.skin.requireFile('uicomponents/widgers/some/widget.js')
{{/code}}

==== ##$services.skin.requireFile(String, Map&lt;String,Object&gt;)## ====

Example : 
{{code}}
$services.skin.requireFile('uicomponents/widgers/some/widget.js', {'forceSkinAction' : true})
{{code}}

</content>
</xwikidoc>
